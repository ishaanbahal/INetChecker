import java.io.IOException;
import java.net.Socket;

public class INetChecker implements Runnable {
	

	public static void main(String[] args){
		/* The main() method defines the 
		 * command line arguments
		 * feel free to add any CLA,
		 * but remember to add a switch case for the argument */
		INetChecker tester = new INetChecker();
		if (args.length == 0){
			System.out.println("Type java INetChecker --help for info \n" +
					   "To just run the program, Type java INetChecker --run");	
		}
		else{
			switch(args[0]){
			case "--help" :{ System.out.println("Help for INetChecker\n.\n.\n.\n" +
					"Type java INetChecker --run to start the application.\n" +
					"Type java INetChecker --help <ATTRIBUTE> for more help on the attribute\n" +
					"Type java INetChecker --info for Info of the software.");
							break;
			}
					
					
			case "--run" : { //tester.createConnections();
						   System.out.println("Checking you internet connection...\n Please disable any 
system proxy like Ultrasurf or tor or the software will not work properly and may take longer to detect internet connection");
						   if(tester.checkTimed(1)) System.out.println("Your Internet is working! :D Enjoy!");
						   break;
			}
			case "--info" : { System.out.println("This software is created by Ishaan and Siddharth.\n" +
					"This software is Open Source and the source can be found at:\n" +
					"http://www.guthub.com/ishaanbahal ");
							  break;
			}
			
			default : System.out.println("Type java INetChecker --help for info");
			}
		}
		
	}
		
	static Socket google = null;
	Thread timer = null;
	int a;
	static boolean val = false;
	
	private boolean createConnections(){
	try{
		google = new Socket("173.194.36.18", 80);
	}
	catch(IOException IOE){
		return false;
	
	}
	if (google.isConnected())
		return true;
	else 
		return false;
	}
		
	public void print(String a){
		// TODO Logging Function. Inherit and Override.Can be used to print anything actually.
	}
	
	public boolean checkTimed(int a){
		//To keep checking connection timely
		timer = new Thread(this);
		timer.start();
		try {
			timer.join();
		} catch (InterruptedException e) {
			System.out.println("Interupted" + e.getLocalizedMessage());
		}
		return true;
	}
	
	public boolean checkOnce(){
		//To check only once
		if (createConnections()){
			return true;
		}
		else return false;
	}
		
	@Override
	public void run() {
		
		while(!val){
			if (createConnections()){
				val = true;
				System.out.println("Successful Connections");
				stop();
				
			} 
			else{
				try {
					Thread.sleep(a*1000);
					val = false;
				} catch (InterruptedException e) {
					System.out.println(e.getLocalizedMessage());
				}
			
		}
		}
		
	}

	public void stop(){	
		if (timer.isAlive()){
			try {
				if (google.isClosed())
				google.close();
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				System.out.println("IO Exception: " + e.getLocalizedMessage());
				
			}
		}
		
	}
	
}
